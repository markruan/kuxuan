<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width,initial-scale=1.0" />
    <title>title</title>
    <!-- <link rel="stylesheet" type="text/css" href="../../css/api.css"/> -->
    <link rel="stylesheet" type="text/css" href="../../css/Hui.css" />

    <style>
        body {}
    </style>
</head>

<body>

</body>
<div style="height:240px"></div>
<div class="H-channel-title H-flexbox-horizontal H-theme-background-color-white H-vertical-middle  ">
    <div class="H-channel-line H-theme-background-color-red H-padding-vertical-top-15 H-padding-horizontal-left-3  H-margin-horizontal-left-10"></div>
    <div class="H-channel-text H-theme-font-color-red H-flex-item H-font-size-12 H-theme-font-color-black H-padding-10 H-margin-horizontal-right-10 H-text-show-row-1"></div>
    <!-- <span class="H-vertical-middle H-theme-font-color-ccc" tapmode onclick="api.openWin({name:'gedanwin',url:'../../html/gedan/gedan_head.html'})"> <label class="H-font-size-13">更多</label> <label class="H-font-size-13 H-iconfont H-icon-arrow-right"></label> </span> -->
</div>
<script src="../../script/api.js " type="text/javascript "></script>
<script type="text/javascript" src="../../script/axios.min.js"></script>
<script type="text/javascript" src="../../script/musicapi.js"></script>

<script type="text/javascript ">
    var uid
    apiready = function() {
        uiloading()
        uid = api.pageParam.uid
        api.execScript({
            name: 'index',
            script: 'app.showfloatModule();'
        });
        $ku.getUserInfo({
            uid: uid
        }, function(ret, err) {
            init(ret.profile)
        })
        openFrameGroup(uid)
        api.addEventListener({
            name: 'updataPer'
        }, function(ret, err) {
            if (ret) {
                uiloading(8)
                api.closeFrameGroup({
                    name: 'group_per'
                });

                var params = {
                    uid: ret.value.uid,
                }
                $ku.getUserInfo(params, function(ret, err) {
                    var userinfo=ret.profile
                    var UIPersonalCenter = api.require('UIPersonalCenter');
                    var backgroundUrl = imageCache(userinfo.backgroundUrl + '?param=50y50')
                    var avatarUrl = imageCache(userinfo.avatarUrl + '?param=400y400')
                    UIPersonalCenter.updateValue({
                        data: {
                          bg: backgroundUrl,
                          avatar: avatarUrl,
                          title: userinfo.nickname,
                          subtitle: userinfo.signature,

                          menuAry: [{
                              title: '歌单',
                              subtitle: userinfo.playlistCount
                          }, {
                              title: '关注',
                              subtitle: userinfo.follows
                          }, {
                              title: '粉丝',
                              subtitle: userinfo.followeds
                          }]
                        }
                    });

                    openFrameGroup(params.uid)
                })


            } else {
                alert(JSON.stringify(err));
            }
        });
        api.addEventListener({
            name: 'navitembtn'
        }, function(ret, err) {
            if (ret.type == 'right') {
                app.shareWx()
            } else {
                api.closeWin();
            }
        });


    }

    function init(userinfo) {
        var UIPersonalCenter = api.require('UIPersonalCenter');
        var backgroundUrl = imageCache(userinfo.backgroundUrl + '?param=400y400')
        var avatarUrl = imageCache(userinfo.avatarUrl + '?param=400y400')

        UIPersonalCenter.open({
            y: 0,
            h: 315,
            data: {
                bg: backgroundUrl,
                avatar: avatarUrl,
                title: userinfo.nickname,
                subtitle: userinfo.signature,

                menuAry: [{
                    title: '歌单',
                    subtitle: userinfo.playlistCount
                }, {
                    title: '关注',
                    subtitle: userinfo.follows
                }, {
                    title: '粉丝',
                    subtitle: userinfo.followeds
                }]
            },
            styles: {
                blur: 50,
                titleColor: '#FFFFFF',
                titleSize: 13,
                subtitleColor: '#FFFFFF',
                subtitleSize: 10,
                avatar: {
                    size: 120,
                    marginTop: 50,
                },
                leftBtn: {
                    title: '返回',
                    titleSize: 16,
                    titleColor: '#fff',
                    bg: 'widget://image/timg.png',
                    corner: 5,
                    icon: 'widget://image/left_back.png',
                    iconSize: 30,
                    size: {
                        w: 80,
                        h: 50,
                    },
                    marginLeft: 10,
                    marginTop: 30,
                },
                rightBtn: {
                    // title: '关注',
                    titleSize: 11,
                    titleColor: '#F00',
                    bg: '#FFFFFF',
                    corner: 5,
                    icon: userinfo.followed ? 'widget://image/heart2.png' : 'widget://image/heart1.png',
                    iconSize: 30,
                    size: {
                        w: 70,
                        h: 50
                    },
                    marginRight: 10,
                    marginTop: 30,
                },
                modBtn: {
                    size: 30,
                    img: 'widget://res/emotion/Expression_5.png'
                },
                menuBtn: {
                    height: 46,
                    // borderColor: 'rgba(0,0,0,1)',
                    titleSize: 16,
                    subtitleSize: 13,
                    normal: {
                        bg: '#fff',
                        titleColor: '#888',
                        subtitleColor: '#ccc'
                    },
                    selected: {
                        bg: '#FFFFFF',
                        titleColor: '#ff0000',
                        subtitleColor: '#ccc'
                    },
                    highlight: {
                        bg: 'rgba(0,0,0,1)'
                    },
                    pointer: { //（可选项）JSON对象；按钮下边游标指针配置，若不传则不显示，游标指针为等边三角形，其大小计入模块总高度
                        size: 6, //（可选项）数字类型；游标指针大小；默认：6 大小不得大于12
                        color: '' //（可选项）字符串类型；游标指针背景色，支持rgb、rgba、#；默认：#48D1CC
                    }

                },
            }
        }, function(ret, err) {
            if (ret) {
                switch (ret.eventType) {
                    case 'leftBtn':
                        api.closeWin();


                        break;
                    case 'rightBtn':
                        like(userinfo.followed)
                        break;
                    case 'menu':
                        api.setFrameGroupIndex({
                            name: 'group_per',
                            index: ret.index,
                            scroll: true
                        });

                        break;
                }

            } else {
                alert(JSON.stringify(err));
            }
        });

    }

    function like(is) {
        if (is) {
            api.confirm({
                title: '提示',
                msg: '已经关注了，要取消关注？',
                buttons: ['确定', '取消']
            }, function(ret, err) {
                if (ret.buttonIndex == 1) {
                    $ku.follow({
                        id: uid,
                        t: 2
                    }, function(ret, err) {
                        if (ret.code == 200) {
                            api.toast({
                                msg: '成功',
                                duration: 2000,
                                location: 'bottom'
                            });
                        }
                    })
                }
            });
        } else {
            $ku.follow({
                id: uid,
                t: 1
            }, function(ret, err) {
                if (ret.code == 200) {
                    msg = '关注成功'
                    api.toast({
                        msg: msg,
                        duration: 1000,
                        location: 'top'
                    });
                } else {
                    // msg = ret.msg api.toast({
                    //     msg: msg,
                    //     duration: 1000,
                    //     location: 'top'
                    // });
                }
            })
        }
    }

    function openFrameGroup(uid) {
        api.openFrameGroup({
                name: 'group_per',
                background: '#fff',
                scrollEnabled: true,
                rect: {
                    x: 0,
                    y: 308,
                    w: 'auto',
                    h: 'auto'
                },
                index: 0,
                frames: [{
                    name: 'per_gedan',
                    url: 'per_gedan.html',
                    bgColor: '#fff',
                    pageParam: {
                        uid: uid
                    }
                }, {
                    name: 'per_follow',
                    url: 'per_follow.html',
                    bgColor: '#fff',
                    pageParam: {
                        uid: uid,
                        isfollow: true
                    },
                }, {
                    name: 'per_followed',
                    url: 'per_follow.html',
                    bgColor: '#fff',
                    pageParam: {
                        uid: uid,
                        isfollow: false
                    }
                }]
            },
            function(ret, err) {
                if (ret) {
                    stoploading()
                    var UIPersonalCenter = api.require('UIPersonalCenter');
                    UIPersonalCenter.setSelect({
                        index: ret.index
                    });
                    // alert(JSON.stringify(ret));
                } else {
                    alert(JSON.stringify(err));
                }
            });

    }
</script>
</body>

</html>
